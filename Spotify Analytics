# For this project, I downloaded a Spotify dataset from Kaggle
# Then, I created a table to insert the data into
# Finally, I ran analytics on the table using SQL

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#From there, I inserted the Spotify Data .csv into the table.

#First, I determined the avg danceability and energy by artist.
SELECT distinct artist_name, avg(danceability), avg(energy) FROM BIT_DB.Spotifydata GROUP BY artist_name 

#Then I wanted only the songs with a tempo over 130 to be added to my playlist. Also, I really don't like Dua Lipa, so I chose to skip her songs. 
SELECT artist_name, track_name,
CASE
    WHEN tempo > 130 THEN 'Play'
    WHEN tempo < 130 THEN 'Skip'
    WHEN artist_name LIKE '%Dua Lipa%' THEN 'Skip'
END AS Playlist
FROM BIT_DB.Spotifydata;

#In this SQL, I found the total number of songs listed for each artist and then found the top 10 artists with the most songs.
SELECT artist_name, count(artist_name)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY count(artist_name) DESC
LIMIT 10;
